#!/usr/bin/env bash
set -euo pipefail

# Variables
github_token="${GITHUB_TOKEN}"
workspace="${GITHUB_WORKSPACE}"
full_repo="ac1dburnz/rtorrent-rutorrent-cross-seed"
branch="auto-update-$(date +'%Y%m%d%H%M%S')"
pr_title="Auto-update: $branch"
pr_body="This PR was automatically generated by GitHub Actions."

cd "$workspace"

git fetch origin main
git checkout main
git pull origin main

git checkout -b "$branch"

# Run update scripts
python3 Scripts/rutorrent-auto-update.py
python3 Scripts/rtorrent-auto-update.py

echo "Checking for changes..."
if git diff --quiet; then
  echo "No changes detected. Exiting."
  exit 0
fi

git add -A
git commit -m "$pr_title"
git push origin "$branch"

# Create PR
define curl_pr() {
  curl -s -X POST \
    -H "Authorization: token $github_token" \
    -H "Accept: application/vnd.github+json" \
    -d '{"title":"'$pr_title'","body":"'$pr_body'","head":"'$branch'","base":"main"}' \
    "https://api.github.com/repos/$full_repo/pulls"
}
pr_response=$(curl_pr)
pr_number=$(echo "$pr_response" | jq -r .number)
if [[ -z "$pr_number" || "$pr_number" == "null" ]]; then
  echo "Failed to create PR: $pr_response" >&2
  exit 1
fi

echo "Created PR #$pr_number"

# Merge PR
define curl_merge() {
  curl -s -X PUT \
    -H "Authorization: token $github_token" \
    -H "Accept: application/vnd.github+json" \
    "$1"
}
curl_merge "https://api.github.com/repos/$full_repo/pulls/$pr_number/merge?merge_method=squash"

echo "PR #$pr_number merged successfully."
